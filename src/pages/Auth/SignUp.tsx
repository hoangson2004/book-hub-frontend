import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { register } from '../../services/authService';
import { RegisterData } from '../../types/User';
import Shell from '../../components/Shell/Shell';
import './Auth.css';

const SignUp: React.FC = () => {
    const navigate = useNavigate();
    const [formData, setFormData] = useState<RegisterData>({
        username: '',
        email: '',
        password: '',
        phoneNumber: '',
        dateOfBirth: '',
    });
    const [confirmPassword, setConfirmPassword] = useState('');
    const [error, setError] = useState<string | null>(null);
    const [showPassword, setShowPassword] = useState(false);
    const [showConfirmPassword, setShowConfirmPassword] = useState(false);

    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        setFormData({ ...formData, [e.target.name]: e.target.value });
    };

    const handleConfirmPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        setConfirmPassword(e.target.value);
    };

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        if (formData.password !== confirmPassword) {
            setError('M·∫≠t kh·∫©u v√† m·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp');
            return;
        }
        try {
            await register(formData);
            alert('ƒêƒÉng k√Ω th√†nh c√¥ng! H√£y ƒëƒÉng nh·∫≠p.');
            navigate('/sign-in'); // Chuy·ªÉn v·ªÅ trang ƒëƒÉng nh·∫≠p
        } catch (err) {
            setError('ƒêƒÉng k√Ω kh√¥ng th√†nh c√¥ng. Vui l√≤ng th·ª≠ l·∫°i.');
        }
    };

    const togglePasswordVisibility = () => {
        setShowPassword(!showPassword);
        setShowConfirmPassword(!showConfirmPassword);
    };

    return (
        <Shell>
            <form onSubmit={handleSubmit} className="auth-form">
                <h1>ƒêƒÉng k√Ω</h1>
                {error && <p className="error-message">{error}</p>}
                <div>
                    <label>H·ªç v√† t√™n</label>
                    <input
                        type="text"
                        name="username"
                        value={formData.username}
                        onChange={handleChange}
                        required
                    />
                </div>
                <div>
                    <label>Email</label>
                    <input
                        type="email"
                        name="email"
                        value={formData.email}
                        onChange={handleChange}
                        required
                    />
                </div>
                <div>
                    <label>M·∫≠t kh·∫©u</label>
                    <div className="password-container">
                        <input
                            type={showPassword ? 'text' : 'password'}
                            name="password"
                            value={formData.password}
                            onChange={handleChange}
                            required
                        />
                        <span className="eye-icon" onClick={togglePasswordVisibility}>
                            {showPassword ? 'üôà' : 'üëÅÔ∏è'}
                        </span>
                    </div>
                </div>
                <div>
                    <label>Nh·∫≠p l·∫°i m·∫≠t kh·∫©u</label>
                    <div className="password-container">
                        <input
                            type={showConfirmPassword ? 'text' : 'password'}
                            name="confirmPassword"
                            value={confirmPassword}
                            onChange={handleConfirmPasswordChange}
                            required
                        />
                        <span className="eye-icon" onClick={togglePasswordVisibility}>
                            {showConfirmPassword ? 'üôà' : 'üëÅÔ∏è'}
                        </span>
                    </div>
                </div>
                <div>
                    <label>S·ªë ƒëi·ªán tho·∫°i</label>
                    <input
                        type="text"
                        name="phoneNumber"
                        value={formData.phoneNumber}
                        onChange={handleChange}
                        required
                    />
                </div>
                <div>
                    <label>Ng√†y sinh</label>
                    <input
                        type="date"
                        name="dateOfBirth"
                        value={formData.dateOfBirth}
                        onChange={handleChange}
                        required
                    />
                </div>
                <div className="agreement-container">
                    <p>
                        B·∫±ng c√°ch nh·∫•p v√†o <strong>ƒêƒÉng k√Ω</strong>, b·∫°n ƒë·ªìng √Ω v·ªõi
                        <a href="/privacy" target="_blank"> Ch√≠nh s√°ch b·∫£o m·∫≠t</a> v√†
                        <a href="/terms" target="_blank"> ƒêi·ªÅu kho·∫£n d·ªãch v·ª•</a> c·ªßa ch√∫ng t√¥i.
                    </p>
                </div>
                <button type="submit">ƒêƒÉng k√Ω</button>

                <div className="switch-container">
                    <p>ƒê√£ c√≥ t√†i kho·∫£n? <a href="/sign-in">ƒêƒÉng nh·∫≠p</a></p>
                </div>
            </form>
        </Shell>
    );
};

export default SignUp;
